% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/HMM.R
\name{viterbi}
\alias{viterbi}
\title{Viterbi Algorithm for POS Tagging}
\usage{
viterbi(
  words,
  tags_level,
  start_p = rep(1/length(tags_level), length(tags_level)),
  trans_p,
  emit_p,
  tag2int,
  word2int
)
}
\arguments{
\item{words}{A vector of words (observations) for which the tags are to be predicted.}

\item{tags_level}{A vector of all possible tags (hidden states) in the model.}

\item{start_p}{A numeric vector of initial probabilities for each tag.
By default, it is set to a uniform distribution.}

\item{trans_p}{A matrix of transition probabilities where `trans_p[i, j]` is the probability of
transitioning from tag i to tag j.}

\item{emit_p}{A matrix of emission probabilities where `emit_p[i, j]` is the probability that tag i
emits word j.}

\item{tag2int}{A named vector or list where names are tags and values are corresponding integer indices.}

\item{word2int}{A named vector or list where names are words and values are corresponding integer indices.}
}
\value{
A list containing the most probable sequence of tags (`path`) and the probability of that
        sequence (`prob`).
}
\description{
This function implements the Viterbi algorithm, which is used for sequence labeling and is particularly
well-suited for tasks like Part-of-Speech tagging. It finds the most likely sequence of hidden states
that results in a sequence of observed events, especially in the context of the Hidden Markov Model.
}
